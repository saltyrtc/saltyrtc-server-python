version: 2.1


shared: &shared
  working_directory: /home/saltyrtc/saltyrtc-server-python

  steps:
    - checkout
    - run:
        name: Install SaltyRTC Server
        command: |
          pip install --no-cache-dir .[dev];
          if [ "${EVENT_LOOP}" = "uvloop" ]; then
            pip install --no-cache-dir .[dev,uvloop];
          fi
    - run:
        name: Run tests
        command: |
          chown -R saltyrtc:saltyrtc /home/saltyrtc
          su saltyrtc -c "py.test \
            --cov-config=.coveragerc \
            --cov=saltyrtc.server \
            --loop=${EVENT_LOOP} \
            --timeout=${TIMEOUT}"
    - deploy:
        name: Upload Codecov
        command: codecov


jobs:
  test-python-3_7-asyncio:
    <<: *shared
    docker:
      - image: saltyrtc/circleci-image-python:python-3.7
    environment:
      - EVENT_LOOP: asyncio
      - TIMEOUT: "2.0"

  test-python-3_7-uvloop:
    <<: *shared
    docker:
      - image: saltyrtc/circleci-image-python:python-3.7
    environment:
      - EVENT_LOOP: uvloop
      - TIMEOUT: "2.0"

  test-python-3_6-asyncio:
    <<: *shared
    docker:
      - image: saltyrtc/circleci-image-python:python-3.6
    environment:
      - EVENT_LOOP: asyncio
      - TIMEOUT: "2.0"

  lint:
    docker:
      - image: saltyrtc/circleci-image-python:python-3.7
    steps:
      - checkout
      - run:
          name: Install SaltyRTC Server
          command: pip install .[dev]
      - run:
          name: Run Flake8
          when: always
          command: flake8 .
      - run:
          name: Run isort
          when: always
          command: isort -rc -c . || (isort -rc -df . && exit 1)
      - run:
          name: Run Mypy
          when: always
          command: MYPYPATH=${PWD}/stubs mypy saltyrtc examples
      - run:
          name: Run checkdocs
          when: always
          command: python setup.py checkdocs

  build-docker:
    docker:
      - image: docker:stable
    parameters:
      rebuild:
        type: boolean
        default: false
    environment:
      - SUPPORTED_TAGS: ^v[5-9][0-9]*\.[0-9]+\.[0-9]+$
    steps:
      - run:
          name: Install git
          command: apk add bash git openssh
      - checkout
      - setup_remote_docker
      - run:
          name: Determine tag name
          command: |
            tags="${CIRCLE_BRANCH}"
            if [ -n "${CIRCLE_TAG}" ]; then
              minortag=$(echo ${CIRCLE_TAG} | sed 's/^\(v[0-9]*\.[0-9]*\)\..*$/\1/')
              majortag=$(echo ${CIRCLE_TAG} | sed 's/^\(v[0-9]*\)\..*$/\1/')
              tags="${CIRCLE_TAG:1} ${minortag:1} ${majortag:1}"
            fi
            echo "Mapping to tags: ${tags}"
            echo "export TAGS=\"${tags}\"" >> ${BASH_ENV}
      - run:
          name: Build Docker image
          command: |
            source ${BASH_ENV}
            docker build --no-cache -t saltyrtc-server-python .
            for tag in ${TAGS}; do
              docker tag saltyrtc-server-python saltyrtc/saltyrtc-server-python:${tag}
            done
      - run:
          name: Push Docker image
          command: |
            source ${BASH_ENV}
            docker login -u ${DOCKER_USER} -p ${DOCKER_API_KEY}
            for tag in ${TAGS}; do
              docker push saltyrtc/saltyrtc-server-python:${tag}
            done
      - when:
          condition: << parameters.rebuild >>
          steps:
            - run:
                name: Build and push Docker images for supported tags
                command: .circleci/build-docker.sh


workflows:
  version: 2
  test:
    jobs:
      - lint
      - test-python-3_7-asyncio
      - test-python-3_7-uvloop
      - test-python-3_6-asyncio
  docker:
    jobs:
      - build-docker:
          filters:
            tags:
              only: /^v.*/
  docker-weekly:
    triggers:
      - schedule:
          cron: "0 5 * * 1"
          filters:
            branches:
              only: master
    jobs:
      - build-docker:
          rebuild: true

